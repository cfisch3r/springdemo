<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	     http://www.springframework.org/schema/tx 
	     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/mvc 
         http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- use annotations to configure beans -->
	<context:annotation-config />

	<!-- search for beans in application package -->
	<context:component-scan base-package="de.fisch3r.springdemo" />

	<!-- resource handling -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- activation of controller -->
	<mvc:annotation-driven />

	<!-- Tiles Configuration -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/def/tiles-def.xml</value>
			</list>
		</property>
	</bean>

	<!-- Velocity configuration -->
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/velocity/" />
	</bean>

	<!-- view resolver based on content types -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<!-- Velocity resolver -->
				<bean
					class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
					<property name="viewClass"
						value="de.fisch3r.springdemo.util.Velocity2LayoutView" />
					<property name="toolboxConfigLocation" value="/WEB-INF/velocity/tools.xml" />
					<property name="layoutUrl" value="layout.vm" />
					<property name="cache" value="false" />
					<property name="prefix" value="" />
					<property name="suffix" value=".vm" />
				</bean>
				<!-- Tiles resolver -->
				<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.tiles2.TilesView" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
			</list>
		</property>
	</bean>

	<!-- JMX configuration -->
	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter"
		lazy-init="false">
		<property name="assembler" ref="assembler" />
		<property name="namingStrategy" ref="namingStrategy" />
		<property name="beans">
			<map>
				<entry key="bean:name=DataStore" value-ref="dataStoreBean" />
			</map>
		</property>
	</bean>
	
	<bean id="jmxAttributeSource"
		class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" />
		
	<!-- will create management interface using annotation metadata -->
	<bean id="assembler"
		class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
		<property name="attributeSource" ref="jmxAttributeSource" />
	</bean>

	<!-- will pick up the ObjectName from the annotation -->
	<bean id="namingStrategy"
		class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
		<property name="attributeSource" ref="jmxAttributeSource" />
	</bean>
	<bean id="dataStoreBean" class="de.fisch3r.springdemo.jmx.DataStoreBean" />
</beans>